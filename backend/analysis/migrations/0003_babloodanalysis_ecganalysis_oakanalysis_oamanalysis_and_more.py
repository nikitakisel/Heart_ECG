# Generated by Django 4.2.16 on 2025-02-23 16:44

import analysis.helpers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("analysis", "0002_analysis_result_image"),
    ]

    operations = [
        migrations.CreateModel(
            name="BABloodAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="название")),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default=analysis.helpers.get_random_slug,
                        max_length=32,
                        unique=True,
                    ),
                ),
                ("total_protein", models.FloatField(verbose_name="общий белок (г/л)")),
                ("albumen", models.FloatField(verbose_name="альбумин (г/л)")),
                ("urea", models.FloatField(verbose_name="мочевина (ммоль/л)")),
                ("creatinine", models.FloatField(verbose_name="креатинин (ммоль/л)")),
                (
                    "total_bilirubin",
                    models.FloatField(verbose_name="общий билирубин (ммоль/м)"),
                ),
                (
                    "direct_bilirubin",
                    models.FloatField(verbose_name="прямой билирубин (ммоль/л)"),
                ),
                (
                    "indirect_bilirubin",
                    models.FloatField(verbose_name="непрямой билирубин (ммоль/л)"),
                ),
                ("glucose", models.FloatField(verbose_name="глюкоза (ммоль/г)")),
                (
                    "c_reactive_protein",
                    models.PositiveIntegerField(
                        verbose_name="С-Реактивный белок (мг/л)"
                    ),
                ),
                ("asat", models.FloatField(verbose_name="АсАт")),
                ("alat", models.FloatField(verbose_name="АлАт")),
                ("calcium", models.FloatField(verbose_name="кальций (ммоль/г)")),
                ("sodium", models.FloatField(verbose_name="натрий (ммоль/г)")),
                ("potassium", models.FloatField(verbose_name="калий (ммоль/г)")),
                ("chlorides", models.FloatField(verbose_name="хлориды (ммоль/л)")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ECGAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="название")),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default=analysis.helpers.get_random_slug,
                        max_length=32,
                        unique=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="analysis/",
                        verbose_name="изображение",
                    ),
                ),
                (
                    "result_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="analysis_results/",
                        verbose_name="обработанное изображение",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "ecg analysis",
                "verbose_name_plural": "ecg analysis",
            },
        ),
        migrations.CreateModel(
            name="OAKAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="название")),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default=analysis.helpers.get_random_slug,
                        max_length=32,
                        unique=True,
                    ),
                ),
                (
                    "hemoglobin",
                    models.PositiveBigIntegerField(verbose_name="гемоглобин (г/л)"),
                ),
                (
                    "erythrocytes",
                    models.PositiveIntegerField(verbose_name="эритроциты (х1012/л)"),
                ),
                (
                    "hematocrit",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="гематокрит (%)",
                    ),
                ),
                (
                    "platelets",
                    models.PositiveIntegerField(verbose_name="тромбоциты (х109/л)"),
                ),
                ("leukocytes", models.FloatField(verbose_name="лейкоциты (х109/л)")),
                (
                    "esr",
                    models.PositiveIntegerField(
                        verbose_name="скорость оседания эритроцитов (мм/ч)"
                    ),
                ),
                ("lymphocytes", models.FloatField(verbose_name="лимфоциты (109/л)")),
                ("monocytes", models.FloatField(verbose_name="моноциты (109/л)")),
                (
                    "thrombocytocrit",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="тромбоцитокрит (%)",
                    ),
                ),
                (
                    "granulocytes",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="гранулоциты (%)",
                    ),
                ),
                (
                    "avg_erythrocytes_volume",
                    models.FloatField(verbose_name="средний объем эритроцита (фл)"),
                ),
                (
                    "avg_hemoglobin_content",
                    models.FloatField(
                        verbose_name="среднее содержание гемоглобина (пг)"
                    ),
                ),
                (
                    "avg_hemoglobin_concentration",
                    models.PositiveIntegerField(
                        verbose_name="средняя концентрация гемоглобина (г/л)"
                    ),
                ),
                (
                    "erythrocytes_distribution_index",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="индекс распределения эритроцитов (%)",
                    ),
                ),
                (
                    "avg_platelets_volume",
                    models.FloatField(verbose_name="средний объем тромбоцита (фл)"),
                ),
                (
                    "distribution_width",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="ширина распределения (%)",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAMAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="название")),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default=analysis.helpers.get_random_slug,
                        max_length=32,
                        unique=True,
                    ),
                ),
                ("color", models.CharField(max_length=100, verbose_name="цвет")),
                (
                    "transparency",
                    models.CharField(max_length=100, verbose_name="прозрачность"),
                ),
                (
                    "relative_density",
                    models.FloatField(verbose_name="относительная плотность"),
                ),
                ("ph", models.FloatField(verbose_name="pH")),
                (
                    "leukocytes",
                    models.BooleanField(default=False, verbose_name="лейкоциты"),
                ),
                (
                    "nitrites",
                    models.BooleanField(default=False, verbose_name="нитриты"),
                ),
                ("protein", models.BooleanField(default=False, verbose_name="белок")),
                ("glucose", models.BooleanField(default=False, verbose_name="глюкоза")),
                ("ketones", models.BooleanField(default=False, verbose_name="кетоны")),
                (
                    "bilirubin",
                    models.BooleanField(default=False, verbose_name="билирубин"),
                ),
                (
                    "ascorbic_acid",
                    models.BooleanField(
                        default=False, verbose_name="аскорбиновая кислота"
                    ),
                ),
                (
                    "urobilinogen",
                    models.BooleanField(default=False, verbose_name="уробилиноген"),
                ),
                (
                    "erythrocytes",
                    models.BooleanField(default=False, verbose_name="эритроциты"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.DeleteModel(
            name="Analysis",
        ),
    ]
